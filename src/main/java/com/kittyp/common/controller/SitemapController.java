package com.kittyp.common.controller;

import java.io.IOException;
import java.time.LocalDate;
import java.time.format.DateTimeFormatter;
import java.util.List;

import org.springframework.http.MediaType;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

import com.kittyp.common.constants.ApiUrl;
import com.kittyp.common.service.SitemapService;
import com.kittyp.common.service.SitemapService.SitemapUrl;

import jakarta.servlet.http.HttpServletResponse;
import lombok.RequiredArgsConstructor;

@RestController
@RequestMapping(ApiUrl.BASE_URL)
@RequiredArgsConstructor
public class SitemapController {

    private final SitemapService sitemapService;

    @GetMapping(value = ApiUrl.SITEMAP, produces = MediaType.APPLICATION_XML_VALUE)
    public void getSitemap(HttpServletResponse response) throws IOException {
        String currentDate = LocalDate.now().format(DateTimeFormatter.ISO_DATE);
        
        // Get sitemap URLs from service (includes dynamic content)
        List<SitemapUrl> sitemapUrls = sitemapService.generateSitemapUrls();

        StringBuilder xml = new StringBuilder();
        xml.append("<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n");
        xml.append("<!-- Generated by Kittyp Sitemap Controller -->\n");
        xml.append("<!-- Last Updated: ").append(currentDate).append(" -->\n");
        xml.append("<!-- Total URLs: ").append(sitemapUrls.size()).append(" -->\n");
        xml.append("<urlset xmlns=\"http://www.sitemaps.org/schemas/sitemap/0.9\"\n");
        xml.append("        xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n");
        xml.append("        xsi:schemaLocation=\"http://www.sitemaps.org/schemas/sitemap/0.9\n");
        xml.append("        http://www.sitemaps.org/schemas/sitemap/0.9/sitemap.xsd\">\n\n");

        // Group URLs by priority for better organization
        xml.append("    <!-- High Priority Pages (0.8-1.0) -->\n");
        for (SitemapUrl url : sitemapUrls) {
            if (url.priority() >= 0.8) {
                appendUrlEntry(xml, url, 4);
            }
        }
        
        xml.append("\n    <!-- Medium Priority Pages (0.6-0.7) -->\n");
        for (SitemapUrl url : sitemapUrls) {
            if (url.priority() >= 0.6 && url.priority() < 0.8) {
                appendUrlEntry(xml, url, 4);
            }
        }
        
        xml.append("\n    <!-- Lower Priority Pages (0.4-0.5) -->\n");
        for (SitemapUrl url : sitemapUrls) {
            if (url.priority() >= 0.4 && url.priority() < 0.6) {
                appendUrlEntry(xml, url, 4);
            }
        }
        
        xml.append("\n    <!-- Utility Pages (0.3) -->\n");
        for (SitemapUrl url : sitemapUrls) {
            if (url.priority() < 0.4) {
                appendUrlEntry(xml, url, 4);
            }
        }

        xml.append("\n</urlset>");

        response.setContentType(MediaType.APPLICATION_XML_VALUE);
        response.setCharacterEncoding("UTF-8");
        response.getWriter().write(xml.toString());
    }
    
    private void appendUrlEntry(StringBuilder xml, SitemapUrl url, int indent) {
        String spaces = " ".repeat(indent);
        xml.append(spaces).append("<url>\n");
        xml.append(spaces).append("    <loc>").append(url.loc()).append("</loc>\n");
        xml.append(spaces).append("    <lastmod>").append(url.lastmod()).append("</lastmod>\n");
        xml.append(spaces).append("    <changefreq>").append(url.changefreq()).append("</changefreq>\n");
        xml.append(spaces).append("    <priority>").append(String.format("%.1f", url.priority())).append("</priority>\n");
        xml.append(spaces).append("</url>\n");
    }
}

